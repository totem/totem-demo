version: 0.1

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION)
      - aws codepipeline --region $AWS_DEFAULT_REGION get-pipeline-state --name totem-demo | jq -c '.stageStates\[\] | select(.actionStates\[\] | .latestExecution.externalExecutionId=="'$CODEBUILD_BUILD_ID'") | .latestExecution.pipelineExecutionId' | xargs aws codepipeline get-pipeline-execution --pipeline-name MyPipeline --pipeline-execution-id | jq -r -c '.pipelineExecution.artifactRevisions\[0\].revisionId' > /tmp/build_id.out
      - echo GIT COMMIT SHA: $(cat /tmp/build_id.out)
      - printf "%s:%s" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME" "$(cat /tmp/build_id.out)" > /tmp/build_tag.out
      - printf '{"tag":"%s"}' "$(cat /tmp/build_id.out)" > /tmp/build.json
      
  build:
    commands:
      - echo Build started on `date` with env
      - echo Building the Docker image...          
      - docker build --tag "$(cat /tmp/build_tag.out)" .     
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push "$(cat /tmp/build_tag.out)"
